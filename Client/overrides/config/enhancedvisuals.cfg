# Configuration file

blur-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true
}


##########################################################################################################
# damage-handler
#--------------------------------------------------------------------------------------------------------#
# when the player is taking damage
##########################################################################################################

damage-handler {
    # max duration of one splash [range: 1 ~ 10000, default: 15]
    I:drownMaxDuration=6

    # min duration of one splash [range: 1 ~ 10000, default: 10]
    I:drownMinDuration=3

    # splashes per hit [range: 0 ~ 10000, default: 4]
    I:drownSplashes=2

    #  [default: true]
    B:enabled=true

    # max duration of one particle [range: 1 ~ 10000, default: 1000]
    I:fireMaxDuration=100

    # min duration of one particle [range: 1 ~ 10000, default: 100]
    I:fireMinDuration=10

    # splashes per tick [range: 0 ~ 10000, default: 1]
    I:fireSplashes=1

    # Red overlay effect once you get hit [default: false]
    B:hitEffect=false
}


damaged-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true
}


deathmessages {
    #  [default: true]
    B:enabled=true

    #  [default: [Do you really want to respawn? think of it again.], [Life is hard. Deal with it!], [You are dead ... wait you already know that.], [Did I let the stove on...?], [Should have shot back first...], [Yep, that's messed up...], [Rage incomming!], [I think you dropped something.], [Time for a break?]]
    S:messages <
        Do you really want to respawn? think of it again.
        Life is hard. Deal with it!
        You are dead ... wait you already know that.
        Did I let the stove on...?
        Should have shot back first...
        Yep, that's messed up...
        Rage incomming!
        I think you dropped something.
        Time for a break?
        See you on the other side.
        Come back for your items!
     >
}


desaturate-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true
}


dust-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true

    #  [range: 0.0 ~ 1000.0, default: 1.0]
    S:scaleFactor=1.0
}


explosion-handler {
    # time of blur = time of muted sounds / blurTimeFactor [range: 0.0 ~ 100000.0, default: 2.5]
    S:blurTimeFactor=2.5

    # max duration of one particle [range: 1 ~ 100000, default: 1000]
    I:dustMaxDuration=100

    # min duration of one particle [range: 1 ~ 100000, default: 500]
    I:dustMinDuration=50

    # damage * multiplier = number of splats [range: 0.0 ~ 10000.0, default: 10.0]
    S:dustSplatsMultiplier=10.0

    #  [default: true]
    B:enabled=true

    # time = Math.max(maxExplosionTime, damage*explosionTimeModifier) [range: 0.0 ~ 100000.0, default: 20.0]
    S:explosionTimeModifier=20.0

    # volume of beep = damage/ConfigCore.explosionVolumeModifier [range: 0.0 ~ 100000.0, default: 10.0]
    S:explosionVolumeModifier=10.0

    # max volume of a beep [range: 0.0 ~ 100000.0, default: 0.5]
    S:maxBeepVolume=0.5

    # max blur effect [range: 0.0 ~ 100000.0, default: 100.0]
    S:maxBlur=100.0

    # maximum explosion duration [range: 0 ~ 100000, default: 1000]
    I:maxExplosionTime=1000

    # factor of all other sounds (muting effect) [range: 0.0 ~ 100000.0, default: 0.0]
    S:minExplosionVolume=0.0
}


fire-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true

    #  [range: 0.0 ~ 1000.0, default: 1.0]
    S:scaleFactor=1.0
}


general {
    # If players in creative mod should have effects [default: false]
    B:noEffectsForCreative=false
}


##########################################################################################################
# heart beat-handler
#--------------------------------------------------------------------------------------------------------#
# blur & bloody overlay
##########################################################################################################

"heart beat-handler" {
    #  [default: true]
    B:enabled=true

    # heartbeat blur duration [range: 0 ~ 10000, default: 5]
    I:heartBeatDuration=5

    # heartbeat blur intensity [range: 0.0 ~ 10000.0, default: 50.0]
    S:heartBeatIntensity=50.0

    # time between heartbeats = player.health * heartBeatHeartFactor + minHeartBeatLength [range: 0.0 ~ 100000.0, default: 5.0]
    S:heartBeatTimeFactor=5.0

    # How loud the heart beat sounds should be [range: 0.0 ~ 1.0, default: 1.0]
    S:heartBeatVolume=1.0

    # below or equal means the heartbeat will take effect [range: 0 ~ 20, default: 6]
    I:heartLevel=6

    # time between heartbeats = player.health * heartBeatHeartFactor + minHeartBeatLength [range: 0 ~ 100000, default: 15]
    I:minHeartBeatLength=10
}


impact-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true

    #  [range: 0.0 ~ 1000.0, default: 1.0]
    S:scaleFactor=1.0
}


lowhealth-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true
}


pierce-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true

    #  [range: 0.0 ~ 1000.0, default: 1.0]
    S:scaleFactor=1.0
}


##########################################################################################################
# potion-handler
#--------------------------------------------------------------------------------------------------------#
# splash potion effect
##########################################################################################################

potion-handler {
    #  [default: true]
    B:enabled=true
}


potion-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true
}


##########################################################################################################
# sand-handler
#--------------------------------------------------------------------------------------------------------#
# walking on sand
##########################################################################################################

sand-handler {
    # modifier: splashes per tick = (int) modifier * Math.random() [range: 0.0 ~ 10000.0, default: 0.5]
    S:defaultmodifier=0.5

    #  [default: true]
    B:enabled=true

    # max duration of one splash [range: 1 ~ 10000, default: 100]
    I:maxDuration=100

    # min duration of one splash [range: 1 ~ 10000, default: 100]
    I:minDuration=100

    # sprinting -> increased modifier [range: 0.0 ~ 10000.0, default: 1.5]
    S:sprintingmodifier=1.5
}


sand-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true

    #  [range: 0.0 ~ 1000.0, default: 1.0]
    S:scaleFactor=1.0
}


##########################################################################################################
# saturation-handler
#--------------------------------------------------------------------------------------------------------#
# saturation depending on hunger
##########################################################################################################

saturation-handler {
    # the default/max saturation [range: 0.0 ~ 10000.0, default: 1.0]
    S:defaultSaturation=1.0

    #  [default: true]
    B:enabled=true

    # saturation += fadeFactor per Tick [range: 0.0 ~ 10000.0, default: 5.0E-4]
    S:fadeFactor=5.0E-4

    # the maximum point saturation is effected [range: 0 ~ 20, default: 8]
    I:maxFoodLevelEffected=8

    # the minimum point saturation is effected [range: 0 ~ 20, default: 2]
    I:minFoodLevelEffected=2

    # lowest saturation [range: 0.0 ~ 10000.0, default: 0.0]
    S:minSaturation=0.0
}


slash-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true

    #  [range: 0.0 ~ 1000.0, default: 1.0]
    S:scaleFactor=1.0
}


##########################################################################################################
# slender-handler
#--------------------------------------------------------------------------------------------------------#
# slenderman effect if you are near an enderman
##########################################################################################################

slender-handler {
    # the default intensity [range: 0.0 ~ 1.0, default: 0.0]
    S:defaultIntensity=0.0

    #  [default: true]
    B:enabled=false

    # maximum intensity [range: 0.0 ~ 1.0, default: 0.3]
    S:maxIntensity=0.3

    # intensity = distance * slenderDistanceFactor [range: 0.0 ~ 10000.0, default: 0.25]
    S:slenderDistanceFactor=0.25
}


slender-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true
}


##########################################################################################################
# splash-handler
#--------------------------------------------------------------------------------------------------------#
# heart beat & splash blur effect
##########################################################################################################

splash-handler {
    #  [default: true]
    B:enabled=true

    # maximum additional splash duration [range: 0 ~ 10000, default: 10]
    I:splashMaxDuration=6

    # maximum additional splash intensity [range: 0.0 ~ 10000.0, default: 5.0]
    S:splashMaxIntensity=5.0

    # minimum splash duration [range: 0 ~ 10000, default: 10]
    I:splashMinDuration=3

    # minimum splash intensity [range: 0.0 ~ 10000.0, default: 10.0]
    S:splashMinIntensity=10.0

    # increased fade out factor in water [range: 0 ~ 100000, default: 10]
    I:waterSubstractFactor=10
}


splatter-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true

    #  [range: 0.0 ~ 1000.0, default: 1.0]
    S:scaleFactor=1.0
}


water-type {
    #  [range: 0.0 ~ 1.0, default: 1.0]
    S:alpha=1.0

    # If the effect is enabled! [default: true]
    B:enabled=true

    #  [range: 0.0 ~ 1000.0, default: 1.0]
    S:scaleFactor=1.0
}


