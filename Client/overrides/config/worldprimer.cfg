# Configuration file

##########################################################################################################
# Generic
#--------------------------------------------------------------------------------------------------------#
# Generic tips:
# There are a few substitutions available to use in the commands.
# They are: {DIMENSION}, {SPAWNX}, {SPAWNY} and {SPAWNZ}
# Any occurences of those strings will be replaced by the current dimension ID,
# or the coordinates of the spawn point, respectively. They also support
# adding or subtracting a value from them. So you can do for example:
# fill {SPAWNX}-2 {SPAWNY}+3 {SPAWNZ}-2 {SPAWNX}+2 {SPAWNY}+7 {SPAWNZ}+2 minecraft:emerald_blockNote however, that the earlyWorldCreationCommands and the earlyWorldLoadingCommands
# DO NOT have a world available yet, so the substitutions will NOT happen for those commands.
# Thus, those commands also can't do anything that would require a world.
# An example of this is setting the game rules - those are kept in the WorldInfo object,
# which is stored in the World, so the overworld specifically needs to be loaded for changing any game rules.
# Additionally, the postWorldCreationCommands and the postWorldLoadingCommands will use
# the Overworld (or whichever world is dimension 0) for the substitutions.
# So it's mostly the dimension loading commands that benefit from the {DIMENSION} substitution.
# Note also, that by default in vanilla/Forge, ALL dimensions use the WorldInfo from the overworld,
# which means that they will have the exact same spawn coordinates and game rules etc. as the overworld.
# Some mods may change this so that dimensions can have separate spawn points, game rules etc.
# One such mod is Just Enough Dimensions.
##########################################################################################################

Generic {
    # Commands to run when a dimension gets loaded.
    # You can target these to only be run when a specific dimension loads
    # by specifying the command as 'worldprimer-dim-command <dim id> <command>'.
    # So for example: 'worldprimer-dim-command 1 say The End has loaded!'.
    # You can also run a command only when a dimension loads for specific number of times:
    # 'worldprimer-dim-command-nth <dim id> <load count> <command>'.
    # This would run the command only when the dimension loads for the 'load count'-th time.
    # The count is incremented before the commands are parsed, so in other words the first load is 1, not 0.
    # You can also run the command every count-th time the dimension loads, by prefixing the count with a '%', so for example
    # worldprimer-dim-command-nth 1 %5 say The End has loaded some multiple of 5 times!
    S:dimensionLoadingCommands <
     >

    # Commands to run on initial world creation, before the spawn chunks have been generated or loaded.
    # If dimension load tracking is enabled, then this happens even before any dimensions have been loaded/initialized yet.
    S:earlyWorldCreationCommands <
     >

    # Commands to run every time the world gets loaded.
    # These are run when the server is starting, before any worlds have been loaded.
    S:earlyWorldLoadingCommands <
     >

    # Enables verbose logging for debug purposes
    B:enableDebugLogging=false

    # Enables tracking dimension load counts, by storing the counts in a file in worlddir/worldprimer/dim_loads.nbt
    B:enableDimensionLoadTracking=true

    # Enables the dimension loading commands
    B:enableDimensionLoadingCommands=false

    # Enables early world creation commands, which are executed before any dimensions
    # have been loaded and thus before any chunks have been generated or loaded.
    B:enableEarlyWorldCreationCommands=false

    # Enables early world loading commands, which are executed once at each server start,
    # before the overworld spawn chunks have been loaded.
    B:enableEarlyWorldLoadingCommands=false

    # Enables late world creation commands, which are executed after the overworld spawn chunks have been generated
    B:enablePostWorldCreationCommands=true

    # Enables late world loading commands, which are executed once at each server start,
    # after the overworld spawn chunks have been loaded.
    B:enablePostWorldLoadingCommands=true

    # Commands to run on initial world creation, after the spawn chunks have been generated and loaded.
    S:postWorldCreationCommands <
	say WORLD LOADED SUCCESFULLY! Now I will unload all unused dimensions and you may log in! Thank you for your patience.
     >

    # Commands to run every time the world gets loaded.
    # These are run when the server has started and the overworld spawn chunks have been loaded.
    S:postWorldLoadingCommands <
	bq_admin default load
	bq_user refresh
	say WORLD LOADED SUCCESFULLY! Now I will unload all unused dimensions and you may log in! Thank you for your patience.
     >
}


